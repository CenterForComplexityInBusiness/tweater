STATUS FINDER

If you have any outages while running your query, you may find it useful to have a distributed script that uses Google Realtime and the Twitter REST API to fill in the gaps. 

After determining the time-bounds of your gap, you can run the "filler" script to query Google Realtime or Topsy and compile a list of relevant tweet ids that were missed during your outage. 

To run the filler, use the form:

$ ./filler <start_time> <end_time> <query_file.txt> <out_file.txt>

Where <start_time> and <end_time> are in seconds since the epoch, <query_file.txt> contains a list of query keywords and phrases to search for, one per line, and <out_file.txt> is the name of the output file you would like to generate. When the script completes (and it could take a while if your outage interval is large or if you have many queries), the output file will contain the tweet IDs of each tweet you missed.

Since some of the services used by the filler script occasionally produce redundancies, we recommend you run the following command to sort the IDs and remove duplicates before continuing.

$ cat <out_file.txt> | sort | uniq > <out_file>.ids

Next we can run the Finder to request the missing tweets from the REST API. Start the Finder using:

$ ./finder start tweater.properties

Here, tweater.properties defines the same configuration you normally use with TwEater. This command not only starts the finder, but also starts worker processes on each machine you specified in your "machines.csv" file.

Once the Finder is started, you can instruct it to search for your tweet IDs with:

$ ./finder add <out_file>.ids

After you run this command, you can see the status of the Finder's search queue using:

$ ./finder size

If at any point you wish to get a list of the Finder's remaining search queue (say, before killing the Finder), use:

$ ./finder dump > <out.txt>

To kill the Finder process and all its workers, use:\

$ ./finder stop
