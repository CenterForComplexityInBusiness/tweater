#!/bin/bash

# Set the amount of memory each instance can use for it's StatusQueue
MEMORY="2048m"

#------------------------------------------------------------------------------

# Make sure that RMIRegistry is up and running
rmiregistry &> /dev/null &

# Figure out where the project's JAR file is
PROJECT=`pwd | sed 's/\([^\\/]*\\/\)*\([^\\/]*\)/\\2/'`
JARPATH="`pwd`/build/dist/${PROJECT}.jar"

# Set the classpath var CP
DIR="`dirname "$0"`"
CP="`find "${DIR}/build/dist" -iname *.jar | tr '\n' ':'`"

# Check whether the first argument is "start" or something else
ARG=`echo "$1" | tr '[A-Z]' '[a-z]'`

if [ "$1" == "start" ]
then
	# Run the program with nohup, &, and Xmx to start a new instance
	nohup java -server -Xmx${MEMORY} -cp "${CP}" \
	        -Djava.rmi.server.codebase="file://${JARPATH}" \
	        -Djava.util.logging.config.file=logging.properties \
		-Dfile.encoding=UTF-8 \
	        edu.umd.cs.dmonner.tweater.TwEater "$@" &  
else
	# Run the program in single-interaction mode 
	java -server -cp "${CP}" \
	        -Djava.rmi.server.codebase="file://${JARPATH}" \
	        -Djava.util.logging.config.file=logging.properties \
		-Dfile.encoding=UTF-8 \
	        edu.umd.cs.dmonner.tweater.TwEater "$@"
fi
