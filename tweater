#!/bin/bash

# Set the amount of memory TwEater can use. You might need more if your queries generate tweets
# faster than they can be written to disk. If your queries generate bursts of 500 tweets per minute
# or more, you should consider increasing the memory parameter to leave more room for caching
# tweets in RAM while they are waiting to be written to disk. If you are running only low-volume
# queries and you have turned off sentiment analysis, you can safely decrease this some, probably 
# as far as 256m.
MEMORY="1024m"

# This specifies the name of jar file that TwEater resides in. You may have to change this if you're
# compiling the code yourself.
JARNAME="tweater"

#------------------------------------------------------------------------------
# EDIT BELOW THIS LINE AT YOUR OWN RISK ---------------------------------------
#------------------------------------------------------------------------------

# Make sure that RMIRegistry is up and running
rmiregistry &> /dev/null &

# Figure out the operating system (in lower case)
OS="`uname -s | tr '[A-Z]' '[a-z]'`"

# Set the classpath separator based on OS
if [[ "$OS" =~ ^cygwin ]]
then
  # cygwin = windows = weird ; separator
  SEP=";"
else
  # otherwise assume unix-like OS with : separator
  SEP=":"
fi

# Set the classpath and jarpath
DIR="`pwd`"
CP="`find "${DIR}/build/dist" -iname *.jar | tr "\n" "${SEP}"`"
JARPATH="${DIR}/build/dist/${JARNAME}.jar"

# Check whether the first argument is "start" or something else
ARG=`echo "$1" | tr '[A-Z]' '[a-z]'`

# Uncomment these for debugging if you're having trouble
#echo $CP
#echo $JARPATH

if [ "$1" == "start" ]
then
	# Run the program with nohup, &, and Xmx to start a new instance
	nohup java -server -Xmx${MEMORY} -cp "${CP}" \
	        -XX:-UseGCOverheadLimit \
	        -Djava.rmi.server.codebase="file://${JARPATH}" \
	        -Djava.util.logging.config.file=logging.properties \
		-Dfile.encoding=UTF-8 \
	        edu.umd.cs.dmonner.tweater.TwEater "$@" &> tweater.log &  
else
	# Run the program in single-interaction mode 
	java -server -cp "${CP}" \
	        -Djava.rmi.server.codebase="file://${JARPATH}" \
	        -Djava.util.logging.config.file=logging.properties \
		-Dfile.encoding=UTF-8 \
	        edu.umd.cs.dmonner.tweater.TwEater "$@"
fi
